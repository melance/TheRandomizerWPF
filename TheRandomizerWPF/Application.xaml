<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:mru="clr-namespace:MRU;assembly=MRU"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             StartupUri="MainWindow.xaml" 
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="/Resources/Icons.xaml" />

                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/themes/mahapps.xaml" />

            </ResourceDictionary.MergedDictionaries>
            
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MahAppsTabablzControlStyle}" />
            
            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
            </Style>
            
            <Style TargetType="{x:Type metro:MetroWindow}" x:Key="WindowStyle">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Padding" Value="2" />
            </Style>
            
            <Style TargetType="{x:Type mru:MRUFileList}" BasedOn="{StaticResource MetroMenuItem}" />
            <Style TargetType="{x:Type mru:MRUFileListItem}" BasedOn="{StaticResource MetroMenuItem}" />
                     
            <SolidColorBrush x:Key="ContentLabelBrush" Color="Black" />
            
            <Style x:Key="TitleLabel" TargetType="Label">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="0,3,0,3" />
            </Style>

            <Style x:Key="SubTitleLabel" TargetType="Label">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Margin" Value="3" />
            </Style>
            
            <Style TargetType="CheckBox" 
                   x:Key="ToggleCheck" 
                   BasedOn="{StaticResource {x:Type ToggleButton}}" />

            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" 
                         Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        <Setter Property="Background" Value="{DynamicResource ResourceKey=ValidationColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" 
                         Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        <Setter Property="Background" Value="{DynamicResource ResourceKey=ValidationColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            
            <ControlTemplate x:Key="CircleButton" TargetType="Button">
                <Grid>
                    <Ellipse Stroke="Black"
                            StrokeThickness="1">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" Value="DarkRed" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Fill" Value="Red" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
