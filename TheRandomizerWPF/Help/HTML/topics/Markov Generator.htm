<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Markov Chain Generator</title>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../css/styles_standard.css">
<style>
	pre {
		border: 4px inset #036;
		background: #EEF;
		padding: 1em;
	}
	code {
		color:#036;
		font-family: "Consolas","Courier New", Courier, Monospace;}
</style>
</head>
<body>

  <div id="topictop">&nbsp;</div>
  <div id="topictitleleft">
    <div id="topictitle">
      <h3>Markov Chain Generator</h3>
    </div>
  </div>
  
  <div id="main">
	<p>
		The Markov Chain Generator is one method of creating a grammar based upon a collection of existing words or names. 
		It can create some very nice grammars given a large enough list of words. This does not mean smaller lists can't work 
		as a good starting point for a grammar but they will rarely give much variety.
		To learn more about Markov Chains, see this article on <a href="https://en.wikipedia.org/wiki/Markov_chain" target="_blank">Wikipedia</a> <image src="../img/popout.gif" />.
	</p>
	<p class="big">
		Grammar Info
	</p>
	<p>
		Grammar info fills in the header information of the grammar. In order to have a usable grammar, this information should be filled in.
	</p>
	<p>
		<b>Name</b>: The name of the grammar
	</p>
	<p>
		<b>Description</b>: The description of the grammar
	</p>
	<p>
		<b>Author</b>: The author of the grammar
	</p>
	<p>
		<b>Tags</b>: A list of tags used to categorize the grammar
	</p>
	<p>
		<b>Supports Max Length</b>: Does this grammar allow max length. This should usually be true for Markov Chain grammars
	</p>
	
	<p class="big">
		Markov Chain Options
	</p>
	<p>
Input options are the name list file that will be the template of the grammar and the length of each syllable. These are the most important parts of generating the grammar.
	</p>
	
	<p class="big">
		File
	</p>
	<p>
		The file is a list of "names" in a file separated by new lines like the sample here:
	</p>

	<pre><code>
Bob
Robert
Rob
Frank
Fred
Henry
Joe
	</code></pre>
	
	<p class="big">
		Syllable Length
	</p>
	<p>
		The syllable length determines the length of each piece that will pulled from each name. Using the name list above and an example syllable length of 2 we would receive a Markov Chain that can be visualized like this:
	</p>

	<pre><code>
Bo=>b=>[end]
Ro=>be=>rt=>[end]
Ro=>b=>[end]
Fr=>an=>k=>[end]
Fr=>ed=>[end]
He=>nr=>y=>[end]
Jo=>e=>[end]
	</code></pre>

	<p class="big">
		Limit Weight
	</p>
	<p>
		This option can be used to prevent unusually large weights from skewing the generation of the items when randomized. Simply select the checkbox and tell the tool the largest weight you will allow.
	</p>
	<p>
		Then, when deconstructed into a grammar:
	</p>

	<pre><code>
[start]=>Bo
[start]=>Ro
[start]=>Fr
[start]=>He
[start]=>Jo
Bo=>b
Ro=>be
Ro=>b
Fr=>an
Fr=>ed
He=>nr
Jo=>e
b=>[end]
be=>rt
an=>k
ed=>[end]
nr=>y
e=>[end]
rt=>[end]
k=>[end]
y=>[end]
	</code></pre>
	
	<p class="big">
		Actions
	</p>
	<ul class="shr">
		<li><b>Generate</b> will generate the Markov Chain in the output window.</li>
		<li><b>Save</b> allows you to save the Markov Chain to a file.</li>
	</ul>

	<p class="big">
		The Output
	</p>
	<p>
		The output will be a Randomizer grammar file.
	</p>

	<pre><code>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;Grammar xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xsi:type=&quot;AssignmentGrammar&quot;&gt;
 &lt;name /&gt;
 &lt;author /&gt;
 &lt;description /&gt;
 &lt;category /&gt;
 &lt;parameters /&gt;
 &lt;supportsMaxLength&gt;true&lt;/supportsMaxLength&gt;
 &lt;items&gt;
   &lt;item name=&quot;Start&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;[Bo]&lt;/item&gt;
   &lt;item name=&quot;Bo&quot; weight=&quot;1&quot; next=&quot;b&quot;&gt;Bo&lt;/item&gt;
   &lt;item name=&quot;b&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;b&lt;/item&gt;
   &lt;item name=&quot;Start&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;[Ro]&lt;/item&gt;
   &lt;item name=&quot;Ro&quot; weight=&quot;1&quot; next=&quot;be&quot;&gt;Ro&lt;/item&gt;
   &lt;item name=&quot;be&quot; weight=&quot;1&quot; next=&quot;rt&quot;&gt;be&lt;/item&gt;
   &lt;item name=&quot;rt&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;rt&lt;/item&gt;
   &lt;item name=&quot;Ro&quot; weight=&quot;1&quot; next=&quot;b&quot;&gt;Ro&lt;/item&gt;
   &lt;item name=&quot;b&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;b&lt;/item&gt;
   &lt;item name=&quot;Start&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;[Fr]&lt;/item&gt;
   &lt;item name=&quot;Fr&quot; weight=&quot;1&quot; next=&quot;an&quot;&gt;Fr&lt;/item&gt;
   &lt;item name=&quot;an&quot; weight=&quot;1&quot; next=&quot;k&quot;&gt;an&lt;/item&gt;
   &lt;item name=&quot;k&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;k&lt;/item&gt;
   &lt;item name=&quot;Fr&quot; weight=&quot;1&quot; next=&quot;ed&quot;&gt;Fr&lt;/item&gt;
   &lt;item name=&quot;ed&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;ed&lt;/item&gt;
   &lt;item name=&quot;Start&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;[He]&lt;/item&gt;
   &lt;item name=&quot;He&quot; weight=&quot;1&quot; next=&quot;nr&quot;&gt;He&lt;/item&gt;
   &lt;item name=&quot;nr&quot; weight=&quot;1&quot; next=&quot;y&quot;&gt;nr&lt;/item&gt;
   &lt;item name=&quot;y&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;y&lt;/item&gt;
   &lt;item name=&quot;Start&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;[Jo]&lt;/item&gt;
   &lt;item name=&quot;Jo&quot; weight=&quot;1&quot; next=&quot;e&quot;&gt;Jo&lt;/item&gt;
   &lt;item name=&quot;e&quot; weight=&quot;1&quot; next=&quot;&quot;&gt;e&lt;/item&gt;
 &lt;/items&gt;
&lt;/Grammar&gt;
	</code></pre>

  </div>
  <div id="foot">
    2014-2015 Lance Boudreaux
  </div>
</body>
</html>
